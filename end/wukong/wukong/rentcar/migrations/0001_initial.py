# Generated by Django 3.0.4 on 2020-03-09 06:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tel', models.CharField(max_length=11, verbose_name='手机号')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='汽车名称')),
                ('group_id', models.CharField(max_length=10, verbose_name='汽车车牌')),
                ('displacement', models.CharField(max_length=10, verbose_name='排放量')),
                ('transmission_name', models.CharField(max_length=10, verbose_name='驾驶方式')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='分类名')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=6, verbose_name='城市')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lng', models.FloatField(verbose_name='经度')),
                ('lat', models.FloatField(verbose_name='维度')),
            ],
        ),
        migrations.CreateModel(
            name='Prices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.PositiveIntegerField(verbose_name='元/小时')),
                ('day', models.PositiveIntegerField(verbose_name='元/天')),
                ('week', models.PositiveIntegerField(verbose_name='元/周')),
                ('month', models.PositiveIntegerField(verbose_name='元/月')),
                ('avg', models.PositiveIntegerField(verbose_name='元/日均')),
                ('minimum', models.PositiveIntegerField(verbose_name='最短起租时间')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='门店名称')),
                ('address', models.CharField(max_length=20, verbose_name='门店地址')),
                ('phone', models.CharField(max_length=20, verbose_name='座机电话')),
                ('site_phone', models.CharField(max_length=20, verbose_name='移动电话')),
                ('from_time', models.TimeField(verbose_name='上班时间')),
                ('to_time', models.TimeField(verbose_name='下班时间')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city', to='rentcar.City', verbose_name='所在城市')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cars', models.ManyToManyField(related_name='所租车辆', to='rentcar.Car')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='用户', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='coordinate',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='rentcar.Location', verbose_name='坐标'),
        ),
        migrations.CreateModel(
            name='Carimgs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='carimgs')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imgs', to='rentcar.Car', verbose_name='所属车辆')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='rentcar.Category', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='car',
            name='price',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='rentcar.Prices', verbose_name='价格'),
        ),
        migrations.AddField(
            model_name='car',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='rentcar.Shop', verbose_name='所属门店'),
        ),
    ]
